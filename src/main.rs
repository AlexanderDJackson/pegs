fn print_board(board: u16) {
    println!("    {:b}    ", board >> 15);

    print!("   {:b} ", (board << 1) >> 15);
    print!("{:b}   \n", (board << 2) >> 15);

    print!("  {:b} ", (board << 3) >> 15);
    print!("{:b} ", (board << 4) >> 15);
    print!("{:b}\n", (board << 5) >> 15);

    print!(" {:b} ", (board << 6) >> 15);
    print!("{:b} ", (board << 7) >> 15);
    print!("{:b} ", (board << 8) >> 15);
    print!("{:b} \n", (board << 9) >> 15);

    print!("{:b} ", (board << 10) >> 15);
    print!("{:b} ", (board << 11) >> 15);
    print!("{:b} ", (board << 12) >> 15);
    print!("{:b} ", (board << 13) >> 15);
    print!("{:b}\n", (board << 14) >> 15);
}

/*
fn possiblePossitions(board: u16) -> Vec<u16> {

}
*/

fn main() {
    let transitions: [u16; 18] = [
        // / slant
        0b1_10_100_0000_00000_0,
        0b0_10_100_1000_00000_0,
        0b0_00_100_1000_10000_0,
        0b0_01_010_0100_00000_0,
        0b0_00_010_0100_01000_0,
        0b0_00_001_0010_00100_0,
        // \ slant
        0b1_01_001_0000_00000_0,
        0b0_01_001_0001_00000_0,
        0b0_00_001_0001_00001_0,
        0b0_10_010_0010_00000_0,
        0b0_00_010_0010_00010_0,
        0b0_00_100_0100_00100_0,
        // horizontal
        0b0_00_111_0000_00000_0,
        0b0_00_000_1110_00000_0,
        0b0_00_000_0111_00000_0,
        0b0_00_000_0000_11100_0,
        0b0_00_000_0000_01110_0,
        0b0_00_000_0000_00111_0,
    ];

    for i in 0..18 {
        print_board(transitions[i]);
    }
}
